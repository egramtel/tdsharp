using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Cancels or re-enables Telegram Star subscription
        /// </summary>
        public class EditStarSubscription : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "editStarSubscription";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the subscription to change
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("subscription_id")]
            public string SubscriptionId { get; set; }

            /// <summary>
            /// New value of is_canceled
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_canceled")]
            public bool IsCanceled { get; set; }
        }

        /// <summary>
        /// Cancels or re-enables Telegram Star subscription
        /// </summary>
        public static Task<Ok> EditStarSubscriptionAsync(
            this Client client, string subscriptionId = default, bool isCanceled = default)
        {
            return client.ExecuteAsync(new EditStarSubscription
            {
                SubscriptionId = subscriptionId, IsCanceled = isCanceled
            });
        }
    }
}
// REUSE-IgnoreEnd