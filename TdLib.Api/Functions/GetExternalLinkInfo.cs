using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns information about an action to be done when the current user clicks an external link. Don't use this method for links from secret chats if link preview is disabled in secret chats
        /// </summary>
        public class GetExternalLinkInfo : Function<LoginUrlInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getExternalLinkInfo";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The link
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("link")]
            public string Link { get; set; }
        }

        /// <summary>
        /// Returns information about an action to be done when the current user clicks an external link. Don't use this method for links from secret chats if link preview is disabled in secret chats
        /// </summary>
        public static Task<LoginUrlInfo> GetExternalLinkInfoAsync(
            this Client client, string link = default)
        {
            return client.ExecuteAsync(new GetExternalLinkInfo
            {
                Link = link
            });
        }
    }
}
// REUSE-IgnoreEnd