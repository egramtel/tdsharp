using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns the list of media previews for the given language and the list of languages for which the bot has dedicated previews
        /// </summary>
        public class GetBotMediaPreviewInfo : Function<BotMediaPreviewInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getBotMediaPreviewInfo";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the target bot. The bot must be owned and must have the main Web App
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// A two-letter ISO 639-1 language code for which to get previews. If empty, then default previews are returned
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_code")]
            public string LanguageCode { get; set; }
        }

        /// <summary>
        /// Returns the list of media previews for the given language and the list of languages for which the bot has dedicated previews
        /// </summary>
        public static Task<BotMediaPreviewInfo> GetBotMediaPreviewInfoAsync(
            this Client client, long botUserId = default, string languageCode = default)
        {
            return client.ExecuteAsync(new GetBotMediaPreviewInfo
            {
                BotUserId = botUserId, LanguageCode = languageCode
            });
        }
    }
}
// REUSE-IgnoreEnd