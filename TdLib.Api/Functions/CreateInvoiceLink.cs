using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Creates a link for the given invoice; for bots only
        /// </summary>
        public class CreateInvoiceLink : Function<HttpUrl>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createInvoiceLink";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of business connection on behalf of which to send the request
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("business_connection_id")]
            public string BusinessConnectionId { get; set; }

            /// <summary>
            /// Information about the invoice of the type inputMessageInvoice
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("invoice")]
            public InputMessageContent Invoice { get; set; }
        }

        /// <summary>
        /// Creates a link for the given invoice; for bots only
        /// </summary>
        public static Task<HttpUrl> CreateInvoiceLinkAsync(
            this Client client, string businessConnectionId = default, InputMessageContent invoice = default)
        {
            return client.ExecuteAsync(new CreateInvoiceLink
            {
                BusinessConnectionId = businessConnectionId, Invoice = invoice
            });
        }
    }
}
// REUSE-IgnoreEnd