using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Toggles whether notifications for new gifts received by a channel chat are sent to the current user; requires can_post_messages administrator right in the chat
        /// </summary>
        public class ToggleChatGiftNotifications : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "toggleChatGiftNotifications";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the channel chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Pass true to enable notifications about new gifts owned by the channel chat; pass false to disable the notifications
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("are_enabled")]
            public bool AreEnabled { get; set; }
        }

        /// <summary>
        /// Toggles whether notifications for new gifts received by a channel chat are sent to the current user; requires can_post_messages administrator right in the chat
        /// </summary>
        public static Task<Ok> ToggleChatGiftNotificationsAsync(
            this Client client, long chatId = default, bool areEnabled = default)
        {
            return client.ExecuteAsync(new ToggleChatGiftNotifications
            {
                ChatId = chatId, AreEnabled = areEnabled
            });
        }
    }
}
// REUSE-IgnoreEnd