using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes affiliate program for a bot
        /// </summary>
        public class SetChatAffiliateProgram : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setChatAffiliateProgram";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat with an owned bot for which affiliate program is changed
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Parameters of the affiliate program; pass null to close the currently active program. If there is an active program, then commission and program duration can only be increased.
            /// If the active program is scheduled to be closed, then it can't be changed anymore
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("parameters")]
            public AffiliateProgramParameters Parameters { get; set; }
        }

        /// <summary>
        /// Changes affiliate program for a bot
        /// </summary>
        public static Task<Ok> SetChatAffiliateProgramAsync(
            this Client client, long chatId = default, AffiliateProgramParameters parameters = default)
        {
            return client.ExecuteAsync(new SetChatAffiliateProgram
            {
                ChatId = chatId, Parameters = parameters
            });
        }
    }
}
// REUSE-IgnoreEnd