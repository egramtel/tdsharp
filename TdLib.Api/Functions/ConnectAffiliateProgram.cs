using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Connects an affiliate program to the given affiliate. Returns information about the connected affiliate program
        /// </summary>
        public class ConnectAffiliateProgram : Function<ConnectedAffiliateProgram>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "connectAffiliateProgram";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The affiliate to which the affiliate program will be connected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("affiliate")]
            public AffiliateType Affiliate { get; set; }

            /// <summary>
            /// Identifier of the bot, which affiliate program is connected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }
        }

        /// <summary>
        /// Connects an affiliate program to the given affiliate. Returns information about the connected affiliate program
        /// </summary>
        public static Task<ConnectedAffiliateProgram> ConnectAffiliateProgramAsync(
            this Client client, AffiliateType affiliate = default, long botUserId = default)
        {
            return client.ExecuteAsync(new ConnectAffiliateProgram
            {
                Affiliate = affiliate, BotUserId = botUserId
            });
        }
    }
}
// REUSE-IgnoreEnd