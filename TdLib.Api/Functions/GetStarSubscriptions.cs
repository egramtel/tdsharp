using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns the list of Telegram Star subscriptions for the current user
        /// </summary>
        public class GetStarSubscriptions : Function<StarSubscriptions>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getStarSubscriptions";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Pass true to receive only expiring subscriptions for which there are no enough Telegram Stars to extend
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("only_expiring")]
            public bool OnlyExpiring { get; set; }

            /// <summary>
            /// Offset of the first subscription to return as received from the previous request; use empty string to get the first chunk of results
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("offset")]
            public string Offset { get; set; }
        }

        /// <summary>
        /// Returns the list of Telegram Star subscriptions for the current user
        /// </summary>
        public static Task<StarSubscriptions> GetStarSubscriptionsAsync(
            this Client client, bool onlyExpiring = default, string offset = default)
        {
            return client.ExecuteAsync(new GetStarSubscriptions
            {
                OnlyExpiring = onlyExpiring, Offset = offset
            });
        }
    }
}
// REUSE-IgnoreEnd