using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Launches a prepaid giveaway
        /// </summary>
        public class LaunchPrepaidGiveaway : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "launchPrepaidGiveaway";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the prepaid giveaway
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("giveaway_id")]
            public long GiveawayId { get; set; }

            /// <summary>
            /// Giveaway parameters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("parameters")]
            public GiveawayParameters Parameters { get; set; }

            /// <summary>
            /// The number of users to receive giveaway prize
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("winner_count")]
            public int WinnerCount { get; set; }

            /// <summary>
            /// The number of Telegram Stars to be distributed through the giveaway; pass 0 for Telegram Premium giveaways
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("star_count")]
            public long StarCount { get; set; }
        }

        /// <summary>
        /// Launches a prepaid giveaway
        /// </summary>
        public static Task<Ok> LaunchPrepaidGiveawayAsync(
            this Client client, long giveawayId = default, GiveawayParameters parameters = default, int winnerCount = default, long starCount = default)
        {
            return client.ExecuteAsync(new LaunchPrepaidGiveaway
            {
                GiveawayId = giveawayId, Parameters = parameters, WinnerCount = winnerCount, StarCount = starCount
            });
        }
    }
}
// REUSE-IgnoreEnd