using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Adds a new media preview to the beginning of the list of media previews of a bot. Returns the added preview after addition is completed server-side. The total number of previews must not exceed getOption("bot_media_preview_count_max") for the given language
        /// </summary>
        public class AddBotMediaPreview : Function<BotMediaPreview>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "addBotMediaPreview";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the target bot. The bot must be owned and must have the main Web App
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// A two-letter ISO 639-1 language code for which preview is added. If empty, then the preview will be shown to all users for whose languages there are no dedicated previews.
            /// If non-empty, then there must be an official language pack of the same name, which is returned by getLocalizationTargetInfo
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_code")]
            public string LanguageCode { get; set; }

            /// <summary>
            /// Content of the added preview
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("content")]
            public InputStoryContent Content { get; set; }
        }

        /// <summary>
        /// Adds a new media preview to the beginning of the list of media previews of a bot. Returns the added preview after addition is completed server-side. The total number of previews must not exceed getOption("bot_media_preview_count_max") for the given language
        /// </summary>
        public static Task<BotMediaPreview> AddBotMediaPreviewAsync(
            this Client client, long botUserId = default, string languageCode = default, InputStoryContent content = default)
        {
            return client.ExecuteAsync(new AddBotMediaPreview
            {
                BotUserId = botUserId, LanguageCode = languageCode, Content = content
            });
        }
    }
}
// REUSE-IgnoreEnd