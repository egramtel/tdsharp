using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Resends the authentication code sent to a phone number. Works only if the previously received authenticationCodeInfo next_code_type was not null and the server-specified timeout has passed
        /// </summary>
        public class ResendPhoneNumberCode : Function<AuthenticationCodeInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "resendPhoneNumberCode";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Reason of code resending; pass null if unknown
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("reason")]
            public ResendCodeReason Reason { get; set; }
        }

        /// <summary>
        /// Resends the authentication code sent to a phone number. Works only if the previously received authenticationCodeInfo next_code_type was not null and the server-specified timeout has passed
        /// </summary>
        public static Task<AuthenticationCodeInfo> ResendPhoneNumberCodeAsync(
            this Client client, ResendCodeReason reason = default)
        {
            return client.ExecuteAsync(new ResendPhoneNumberCode
            {
                Reason = reason
            });
        }
    }
}
// REUSE-IgnoreEnd