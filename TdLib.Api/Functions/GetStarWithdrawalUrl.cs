using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns a URL for Telegram Star withdrawal
        /// </summary>
        public class GetStarWithdrawalUrl : Function<HttpUrl>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getStarWithdrawalUrl";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the owner of the Telegram Stars; can be identifier of an owned bot, or identifier of an owned channel chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("owner_id")]
            public MessageSender OwnerId { get; set; }

            /// <summary>
            /// The number of Telegram Stars to withdraw. Must be at least getOption("star_withdrawal_count_min")
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("star_count")]
            public long StarCount { get; set; }

            /// <summary>
            /// The 2-step verification password of the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("password")]
            public string Password { get; set; }
        }

        /// <summary>
        /// Returns a URL for Telegram Star withdrawal
        /// </summary>
        public static Task<HttpUrl> GetStarWithdrawalUrlAsync(
            this Client client, MessageSender ownerId = default, long starCount = default, string password = default)
        {
            return client.ExecuteAsync(new GetStarWithdrawalUrl
            {
                OwnerId = ownerId, StarCount = starCount, Password = password
            });
        }
    }
}
// REUSE-IgnoreEnd