using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Informs TDLib that the user opened the sponsored chat via the button, the name, the chat photo, a mention in the sponsored message text, or the media in the sponsored message
        /// </summary>
        public class ClickChatSponsoredMessage : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "clickChatSponsoredMessage";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier of the sponsored message
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the sponsored message
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_id")]
            public long MessageId { get; set; }

            /// <summary>
            /// Pass true if the media was clicked in the sponsored message
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_media_click")]
            public bool IsMediaClick { get; set; }

            /// <summary>
            /// Pass true if the user expanded the video from the sponsored message fullscreen before the click
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("from_fullscreen")]
            public bool FromFullscreen { get; set; }
        }

        /// <summary>
        /// Informs TDLib that the user opened the sponsored chat via the button, the name, the chat photo, a mention in the sponsored message text, or the media in the sponsored message
        /// </summary>
        public static Task<Ok> ClickChatSponsoredMessageAsync(
            this Client client, long chatId = default, long messageId = default, bool isMediaClick = default, bool fromFullscreen = default)
        {
            return client.ExecuteAsync(new ClickChatSponsoredMessage
            {
                ChatId = chatId, MessageId = messageId, IsMediaClick = isMediaClick, FromFullscreen = fromFullscreen
            });
        }
    }
}
// REUSE-IgnoreEnd