using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns approximate number of bots similar to the given bot
        /// </summary>
        public class GetBotSimilarBotCount : Function<Count>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getBotSimilarBotCount";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// User identifier of the target bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// Pass true to get the number of bots without sending network requests, or -1 if the number of bots is unknown locally
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("return_local")]
            public bool ReturnLocal { get; set; }
        }

        /// <summary>
        /// Returns approximate number of bots similar to the given bot
        /// </summary>
        public static Task<Count> GetBotSimilarBotCountAsync(
            this Client client, long botUserId = default, bool returnLocal = default)
        {
            return client.ExecuteAsync(new GetBotSimilarBotCount
            {
                BotUserId = botUserId, ReturnLocal = returnLocal
            });
        }
    }
}
// REUSE-IgnoreEnd