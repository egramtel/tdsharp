using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Searches a chat with an affiliate program. Returns the chat if found and the program is active
        /// </summary>
        public class SearchChatAffiliateProgram : Function<Chat>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "searchChatAffiliateProgram";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Username of the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("username")]
            public string Username { get; set; }

            /// <summary>
            /// The referrer from an internalLinkTypeChatAffiliateProgram link
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("referrer")]
            public string Referrer { get; set; }
        }

        /// <summary>
        /// Searches a chat with an affiliate program. Returns the chat if found and the program is active
        /// </summary>
        public static Task<Chat> SearchChatAffiliateProgramAsync(
            this Client client, string username = default, string referrer = default)
        {
            return client.ExecuteAsync(new SearchChatAffiliateProgram
            {
                Username = username, Referrer = referrer
            });
        }
    }
}
// REUSE-IgnoreEnd