using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Saves an inline message to be sent by the given user; for bots only
        /// </summary>
        public class SavePreparedInlineMessage : Function<PreparedInlineMessageId>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "savePreparedInlineMessage";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("user_id")]
            public long UserId { get; set; }

            /// <summary>
            /// The description of the message
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("result")]
            public InputInlineQueryResult Result { get; set; }

            /// <summary>
            /// Types of the chats to which the message can be sent
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_types")]
            public TargetChatTypes ChatTypes { get; set; }
        }

        /// <summary>
        /// Saves an inline message to be sent by the given user; for bots only
        /// </summary>
        public static Task<PreparedInlineMessageId> SavePreparedInlineMessageAsync(
            this Client client, long userId = default, InputInlineQueryResult result = default, TargetChatTypes chatTypes = default)
        {
            return client.ExecuteAsync(new SavePreparedInlineMessage
            {
                UserId = userId, Result = result, ChatTypes = chatTypes
            });
        }
    }
}
// REUSE-IgnoreEnd