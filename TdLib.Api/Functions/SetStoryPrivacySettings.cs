using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes privacy settings of a story. The method can be called only for stories posted on behalf of the current user and if story.can_be_edited == true
        /// </summary>
        public class SetStoryPrivacySettings : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setStoryPrivacySettings";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("story_id")]
            public int StoryId { get; set; }

            /// <summary>
            /// The new privacy settings for the story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("privacy_settings")]
            public StoryPrivacySettings PrivacySettings { get; set; }
        }

        /// <summary>
        /// Changes privacy settings of a story. The method can be called only for stories posted on behalf of the current user and if story.can_be_edited == true
        /// </summary>
        public static Task<Ok> SetStoryPrivacySettingsAsync(
            this Client client, int storyId = default, StoryPrivacySettings privacySettings = default)
        {
            return client.ExecuteAsync(new SetStoryPrivacySettings
            {
                StoryId = storyId, PrivacySettings = privacySettings
            });
        }
    }
}
// REUSE-IgnoreEnd