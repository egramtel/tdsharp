using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns an invoice payment form. This method must be called when the user presses inline button of the type inlineKeyboardButtonTypeBuy, or wants to buy access to media in a messagePaidMedia message
        /// </summary>
        public class GetPaymentForm : Function<PaymentForm>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getPaymentForm";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The invoice
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("input_invoice")]
            public InputInvoice InputInvoice { get; set; }

            /// <summary>
            /// Preferred payment form theme; pass null to use the default theme
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("theme")]
            public ThemeParameters Theme { get; set; }
        }

        /// <summary>
        /// Returns an invoice payment form. This method must be called when the user presses inline button of the type inlineKeyboardButtonTypeBuy, or wants to buy access to media in a messagePaidMedia message
        /// </summary>
        public static Task<PaymentForm> GetPaymentFormAsync(
            this Client client, InputInvoice inputInvoice = default, ThemeParameters theme = default)
        {
            return client.ExecuteAsync(new GetPaymentForm
            {
                InputInvoice = inputInvoice, Theme = theme
            });
        }
    }
}
// REUSE-IgnoreEnd