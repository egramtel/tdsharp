using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class BackgroundType : Object
        {
            /// <summary>
            /// A PNG or TGV (gzipped subset of SVG with MIME type "application/x-tgwallpattern") pattern to be combined with the background fill chosen by the user
            /// </summary>
            public class BackgroundTypePattern : BackgroundType
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "backgroundTypePattern";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Fill of the background
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("fill")]
                public BackgroundFill Fill { get; set; }

                /// <summary>
                /// Intensity of the pattern when it is shown above the filled background; 0-100
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("intensity")]
                public int Intensity { get; set; }

                /// <summary>
                /// True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_inverted")]
                public bool IsInverted { get; set; }

                /// <summary>
                /// True, if the background needs to be slightly moved when device is tilted
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_moving")]
                public bool IsMoving { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd