using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Represents a transaction changing the amount of owned Telegram Stars
        /// </summary>
        public partial class StarTransaction : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "starTransaction";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the transaction
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public string Id { get; set; }

            /// <summary>
            /// The amount of added owned Telegram Stars; negative for outgoing transactions
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("star_amount")]
            public StarAmount StarAmount { get; set; }

            /// <summary>
            /// True, if the transaction is a refund of a previous transaction
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_refund")]
            public bool IsRefund { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the transaction was completed
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("date")]
            public int Date { get; set; }

            /// <summary>
            /// Type of the transaction
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public StarTransactionType Type { get; set; }
        }
    }
}
// REUSE-IgnoreEnd