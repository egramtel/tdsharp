using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a paid media to be sent
        /// </summary>
        public partial class InputPaidMedia : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "inputPaidMedia";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Type of the media
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public InputPaidMediaType Type { get; set; }

            /// <summary>
            /// Photo or video to be sent
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("media")]
            public InputFile Media { get; set; }

            /// <summary>
            /// Media thumbnail; pass null to skip thumbnail uploading
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("thumbnail")]
            public InputThumbnail Thumbnail { get; set; }

            /// <summary>
            /// File identifiers of the stickers added to the media, if applicable
            /// </summary>
            [JsonProperty("added_sticker_file_ids", ItemConverterType = typeof(Converter))]
            public int[] AddedStickerFileIds { get; set; }

            /// <summary>
            /// Media width
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("width")]
            public int Width { get; set; }

            /// <summary>
            /// Media height
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("height")]
            public int Height { get; set; }
        }
    }
}
// REUSE-IgnoreEnd