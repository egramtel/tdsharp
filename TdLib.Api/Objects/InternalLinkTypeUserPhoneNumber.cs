using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class InternalLinkType : Object
        {
            /// <summary>
            /// The link is a link to a user by its phone number. Call searchUserByPhoneNumber with the given phone number to process the link.
            /// If the user is found, then call createPrivateChat and open user's profile information screen or the chat itself. If draft text isn't empty, then put the draft text in the input field
            /// </summary>
            public class InternalLinkTypeUserPhoneNumber : InternalLinkType
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "internalLinkTypeUserPhoneNumber";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Phone number of the user
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("phone_number")]
                public string PhoneNumber { get; set; }

                /// <summary>
                /// Draft text for message to send in the chat
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("draft_text")]
                public string DraftText { get; set; }

                /// <summary>
                /// True, if user's profile information screen must be opened; otherwise, the chat itself must be opened
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("open_profile")]
                public bool OpenProfile { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd