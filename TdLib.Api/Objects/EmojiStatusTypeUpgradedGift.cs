using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class EmojiStatusType : Object
        {
            /// <summary>
            /// An upgraded gift set as emoji status
            /// </summary>
            public class EmojiStatusTypeUpgradedGift : EmojiStatusType
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "emojiStatusTypeUpgradedGift";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Identifier of the upgraded gift
                /// </summary>
                [JsonConverter(typeof(Converter.Int64))]
                [JsonProperty("upgraded_gift_id")]
                public long UpgradedGiftId { get; set; }

                /// <summary>
                /// The title of the upgraded gift
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("gift_title")]
                public string GiftTitle { get; set; }

                /// <summary>
                /// Unique name of the upgraded gift that can be used with internalLinkTypeUpgradedGift
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("gift_name")]
                public string GiftName { get; set; }

                /// <summary>
                /// Custom emoji identifier of the model of the upgraded gift
                /// </summary>
                [JsonConverter(typeof(Converter.Int64))]
                [JsonProperty("model_custom_emoji_id")]
                public long ModelCustomEmojiId { get; set; }

                /// <summary>
                /// Custom emoji identifier of the symbol of the upgraded gift
                /// </summary>
                [JsonConverter(typeof(Converter.Int64))]
                [JsonProperty("symbol_custom_emoji_id")]
                public long SymbolCustomEmojiId { get; set; }

                /// <summary>
                /// Colors of the backdrop of the upgraded gift
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("backdrop_colors")]
                public UpgradedGiftBackdropColors BackdropColors { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd