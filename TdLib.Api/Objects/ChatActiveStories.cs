using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes active stories posted by a chat
        /// </summary>
        public partial class ChatActiveStories : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "chatActiveStories";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat that posted the stories
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the story list in which the stories are shown; may be null if the stories aren't shown in a story list
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("list")]
            public StoryList List { get; set; }

            /// <summary>
            /// A parameter used to determine order of the stories in the story list; 0 if the stories doesn't need to be shown in the story list. Stories must be sorted by the pair (order, story_sender_chat_id) in descending order
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("order")]
            public long Order { get; set; }

            /// <summary>
            /// Identifier of the last read active story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("max_read_story_id")]
            public int MaxReadStoryId { get; set; }

            /// <summary>
            /// Basic information about the stories; use getStory to get full information about the stories. The stories are in chronological order (i.e., in order of increasing story identifiers)
            /// </summary>
            [JsonProperty("stories", ItemConverterType = typeof(Converter))]
            public StoryInfo[] Stories { get; set; }
        }
    }
}
// REUSE-IgnoreEnd