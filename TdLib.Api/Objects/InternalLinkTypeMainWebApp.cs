using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class InternalLinkType : Object
        {
            /// <summary>
            /// The link is a link to the main Web App of a bot. Call searchPublicChat with the given bot username, check that the user is a bot and has the main Web App.
            /// If the bot can be added to attachment menu, then use getAttachmentMenuBot to receive information about the bot, then if the bot isn't added to side menu,
            /// show a disclaimer about Mini Apps being third-party applications, ask the user to accept their Terms of service and confirm adding the bot to side and attachment menu,
            /// then if the user accepts the terms and confirms adding, use toggleBotIsAddedToAttachmentMenu to add the bot.
            /// Then, use getMainWebApp with the given start parameter and mode and open the returned URL as a Web App
            /// </summary>
            public class InternalLinkTypeMainWebApp : InternalLinkType
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "internalLinkTypeMainWebApp";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Username of the bot
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("bot_username")]
                public string BotUsername { get; set; }

                /// <summary>
                /// Start parameter to be passed to getMainWebApp
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("start_parameter")]
                public string StartParameter { get; set; }

                /// <summary>
                /// The mode to be passed to getMainWebApp
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("mode")]
                public WebAppOpenMode Mode { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd