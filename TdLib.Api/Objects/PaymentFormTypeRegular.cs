using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class PaymentFormType : Object
        {
            /// <summary>
            /// Describes type of payment form
            /// </summary>
            public class PaymentFormTypeRegular : PaymentFormType
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "paymentFormTypeRegular";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Full information about the invoice
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("invoice")]
                public Invoice Invoice { get; set; }

                /// <summary>
                /// User identifier of the payment provider bot
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("payment_provider_user_id")]
                public long PaymentProviderUserId { get; set; }

                /// <summary>
                /// Information about the payment provider
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("payment_provider")]
                public PaymentProvider PaymentProvider { get; set; }

                /// <summary>
                /// The list of additional payment options
                /// </summary>
                [JsonProperty("additional_payment_options", ItemConverterType = typeof(Converter))]
                public PaymentOption[] AdditionalPaymentOptions { get; set; }

                /// <summary>
                /// Saved server-side order information; may be null
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("saved_order_info")]
                public OrderInfo SavedOrderInfo { get; set; }

                /// <summary>
                /// The list of saved payment credentials
                /// </summary>
                [JsonProperty("saved_credentials", ItemConverterType = typeof(Converter))]
                public SavedCredentials[] SavedCredentials { get; set; }

                /// <summary>
                /// True, if the user can choose to save credentials
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("can_save_credentials")]
                public bool CanSaveCredentials { get; set; }

                /// <summary>
                /// True, if the user will be able to save credentials, if sets up a 2-step verification password
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("need_password")]
                public bool NeedPassword { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd