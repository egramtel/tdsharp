using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains information about a user that added paid reactions
        /// </summary>
        public partial class PaidReactor : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "paidReactor";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the user or chat that added the reactions; may be null for anonymous reactors that aren't the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("sender_id")]
            public MessageSender SenderId { get; set; }

            /// <summary>
            /// Number of Telegram Stars added
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("star_count")]
            public int StarCount { get; set; }

            /// <summary>
            /// True, if the reactor is one of the most active reactors; may be false if the reactor is the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_top")]
            public bool IsTop { get; set; }

            /// <summary>
            /// True, if the paid reaction was added by the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_me")]
            public bool IsMe { get; set; }

            /// <summary>
            /// True, if the reactor is anonymous
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_anonymous")]
            public bool IsAnonymous { get; set; }
        }
    }
}
// REUSE-IgnoreEnd