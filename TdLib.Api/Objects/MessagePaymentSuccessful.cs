using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class MessageContent : Object
        {
            /// <summary>
            /// A payment has been sent to a bot or a business account
            /// </summary>
            public class MessagePaymentSuccessful : MessageContent
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "messagePaymentSuccessful";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Identifier of the chat, containing the corresponding invoice message
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("invoice_chat_id")]
                public long InvoiceChatId { get; set; }

                /// <summary>
                /// Identifier of the message with the corresponding invoice; can be 0 or an identifier of a deleted message
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("invoice_message_id")]
                public long InvoiceMessageId { get; set; }

                /// <summary>
                /// Currency for the price of the product
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("currency")]
                public string Currency { get; set; }

                /// <summary>
                /// Total price for the product, in the smallest units of the currency
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("total_amount")]
                public long TotalAmount { get; set; }

                /// <summary>
                /// Point in time (Unix timestamp) when the subscription will expire; 0 if unknown or the payment isn't recurring
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("subscription_until_date")]
                public int SubscriptionUntilDate { get; set; }

                /// <summary>
                /// True, if this is a recurring payment
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_recurring")]
                public bool IsRecurring { get; set; }

                /// <summary>
                /// True, if this is the first recurring payment
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_first_recurring")]
                public bool IsFirstRecurring { get; set; }

                /// <summary>
                /// Name of the invoice; may be empty if unknown
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("invoice_name")]
                public string InvoiceName { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd