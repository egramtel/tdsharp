using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a sticker
        /// </summary>
        public partial class Sticker : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "sticker";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique sticker identifier within the set; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("id")]
            public long Id { get; set; }

            /// <summary>
            /// Identifier of the sticker set to which the sticker belongs; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("set_id")]
            public long SetId { get; set; }

            /// <summary>
            /// Sticker width; as defined by the sender
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("width")]
            public int Width { get; set; }

            /// <summary>
            /// Sticker height; as defined by the sender
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("height")]
            public int Height { get; set; }

            /// <summary>
            /// Emoji corresponding to the sticker
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("emoji")]
            public string Emoji { get; set; }

            /// <summary>
            /// Sticker format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("format")]
            public StickerFormat Format { get; set; }

            /// <summary>
            /// Sticker's full type
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("full_type")]
            public StickerFullType FullType { get; set; }

            /// <summary>
            /// Sticker thumbnail in WEBP or JPEG format; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("thumbnail")]
            public Thumbnail Thumbnail { get; set; }

            /// <summary>
            /// File containing the sticker
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("sticker")]
            public File Sticker_ { get; set; }
        }
    }
}
// REUSE-IgnoreEnd