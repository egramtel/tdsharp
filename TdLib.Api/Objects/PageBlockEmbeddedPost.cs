using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class PageBlock : Object
        {
            /// <summary>
            /// An embedded post
            /// </summary>
            public class PageBlockEmbeddedPost : PageBlock
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "pageBlockEmbeddedPost";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// URL of the embedded post
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("url")]
                public string Url { get; set; }

                /// <summary>
                /// Post author
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("author")]
                public string Author { get; set; }

                /// <summary>
                /// Post author photo; may be null
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("author_photo")]
                public Photo AuthorPhoto { get; set; }

                /// <summary>
                /// Point in time (Unix timestamp) when the post was created; 0 if unknown
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("date")]
                public int Date { get; set; }

                /// <summary>
                /// Post content
                /// </summary>
                [JsonProperty("page_blocks", ItemConverterType = typeof(Converter))]
                public PageBlock[] PageBlocks { get; set; }

                /// <summary>
                /// Post caption
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("caption")]
                public PageBlockCaption Caption { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd