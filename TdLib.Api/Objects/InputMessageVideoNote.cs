using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class InputMessageContent : Object
        {
            /// <summary>
            /// A video note message
            /// </summary>
            public class InputMessageVideoNote : InputMessageContent
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "inputMessageVideoNote";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Video note to be sent. The video is expected to be encoded to MPEG4 format with H.264 codec and have no data outside of the visible circle
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("video_note")]
                public InputFile VideoNote { get; set; }

                /// <summary>
                /// Video thumbnail; may be null if empty; pass null to skip thumbnail uploading
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("thumbnail")]
                public InputThumbnail Thumbnail { get; set; }

                /// <summary>
                /// Duration of the video, in seconds; 0-60
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("duration")]
                public int Duration { get; set; }

                /// <summary>
                /// Video width and height; must be positive and not greater than 640
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("length")]
                public int Length { get; set; }

                /// <summary>
                /// Video note self-destruct type; may be null if none; pass null if none; private chats only
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("self_destruct_type")]
                public MessageSelfDestructType SelfDestructType { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd