using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes current boost status of a chat
        /// </summary>
        public partial class ChatBoostStatus : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "chatBoostStatus";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// An HTTP URL, which can be used to boost the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("boost_url")]
            public string BoostUrl { get; set; }

            /// <summary>
            /// Identifiers of boost slots of the current user applied to the chat
            /// </summary>
            [JsonProperty("applied_slot_ids", ItemConverterType = typeof(Converter))]
            public int[] AppliedSlotIds { get; set; }

            /// <summary>
            /// Current boost level of the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("level")]
            public int Level { get; set; }

            /// <summary>
            /// The number of boosts received by the chat from created Telegram Premium gift codes and giveaways; always 0 if the current user isn't an administrator in the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("gift_code_boost_count")]
            public int GiftCodeBoostCount { get; set; }

            /// <summary>
            /// The number of boosts received by the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("boost_count")]
            public int BoostCount { get; set; }

            /// <summary>
            /// The number of boosts added to reach the current level
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("current_level_boost_count")]
            public int CurrentLevelBoostCount { get; set; }

            /// <summary>
            /// The number of boosts needed to reach the next level; 0 if the next level isn't available
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("next_level_boost_count")]
            public int NextLevelBoostCount { get; set; }

            /// <summary>
            /// Approximate number of Telegram Premium subscribers joined the chat; always 0 if the current user isn't an administrator in the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("premium_member_count")]
            public int PremiumMemberCount { get; set; }

            /// <summary>
            /// A percentage of Telegram Premium subscribers joined the chat; always 0 if the current user isn't an administrator in the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("premium_member_percentage")]
            public double? PremiumMemberPercentage { get; set; }

            /// <summary>
            /// The list of prepaid giveaways available for the chat; only for chat administrators
            /// </summary>
            [JsonProperty("prepaid_giveaways", ItemConverterType = typeof(Converter))]
            public PrepaidGiveaway[] PrepaidGiveaways { get; set; }
        }
    }
}
// REUSE-IgnoreEnd