using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a call
        /// </summary>
        public partial class Call : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "call";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Call identifier, not persistent
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public int Id { get; set; }

            /// <summary>
            /// User identifier of the other call participant
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("user_id")]
            public long UserId { get; set; }

            /// <summary>
            /// True, if the call is outgoing
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_outgoing")]
            public bool IsOutgoing { get; set; }

            /// <summary>
            /// True, if the call is a video call
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_video")]
            public bool IsVideo { get; set; }

            /// <summary>
            /// Call state
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("state")]
            public CallState State { get; set; }

            /// <summary>
            /// Identifier of the group call associated with the call; 0 if the group call isn't created yet. The group call can be received through the method getGroupCall
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("group_call_id")]
            public int GroupCallId { get; set; }
        }
    }
}
// REUSE-IgnoreEnd