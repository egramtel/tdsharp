using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes an option for buying Telegram Stars. Use telegramPaymentPurposeStars for out-of-store payments
        /// </summary>
        public partial class StarPaymentOption : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "starPaymentOption";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// ISO 4217 currency code for the payment
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("currency")]
            public string Currency { get; set; }

            /// <summary>
            /// The amount to pay, in the smallest units of the currency
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("amount")]
            public long Amount { get; set; }

            /// <summary>
            /// Number of Telegram Stars that will be purchased
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("star_count")]
            public long StarCount { get; set; }

            /// <summary>
            /// Identifier of the store product associated with the option; may be empty if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("store_product_id")]
            public string StoreProductId { get; set; }

            /// <summary>
            /// True, if the option must be shown only in the full list of payment options
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_additional")]
            public bool IsAdditional { get; set; }
        }
    }
}
// REUSE-IgnoreEnd