using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class ChatBoostSource : Object
        {
            /// <summary>
            /// The chat created a giveaway
            /// </summary>
            public class ChatBoostSourceGiveaway : ChatBoostSource
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "chatBoostSourceGiveaway";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Identifier of a user that won in the giveaway; 0 if none
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("user_id")]
                public long UserId { get; set; }

                /// <summary>
                /// The created Telegram Premium gift code if it was used by the user or can be claimed by the current user; an empty string otherwise; for Telegram Premium giveways only
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("gift_code")]
                public string GiftCode { get; set; }

                /// <summary>
                /// Number of Telegram Stars distributed among winners of the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("star_count")]
                public long StarCount { get; set; }

                /// <summary>
                /// Identifier of the corresponding giveaway message; can be an identifier of a deleted message
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("giveaway_message_id")]
                public long GiveawayMessageId { get; set; }

                /// <summary>
                /// True, if the winner for the corresponding giveaway prize wasn't chosen, because there were not enough participants
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_unclaimed")]
                public bool IsUnclaimed { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd