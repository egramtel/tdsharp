using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains information about a message draft
        /// </summary>
        public partial class DraftMessage : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "draftMessage";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Information about the message to be replied; must be of the type inputMessageReplyToMessage; may be null if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("reply_to")]
            public InputMessageReplyTo ReplyTo { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the draft was created
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("date")]
            public int Date { get; set; }

            /// <summary>
            /// Content of the message draft; must be of the type inputMessageText, inputMessageVideoNote, or inputMessageVoiceNote
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("input_message_text")]
            public InputMessageContent InputMessageText { get; set; }

            /// <summary>
            /// Identifier of the effect to apply to the message when it is sent; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("effect_id")]
            public long EffectId { get; set; }
        }
    }
}
// REUSE-IgnoreEnd