using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains information about subscription to a channel chat, a bot, or a business account that was paid in Telegram Stars
        /// </summary>
        public partial class StarSubscription : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "starSubscription";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the subscription
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public string Id { get; set; }

            /// <summary>
            /// Identifier of the chat that is subscribed
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the subscription will expire or expired
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("expiration_date")]
            public int ExpirationDate { get; set; }

            /// <summary>
            /// True, if the subscription was canceled
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_canceled")]
            public bool IsCanceled { get; set; }

            /// <summary>
            /// True, if the subscription expires soon and there are no enough Telegram Stars on the user's balance to extend it
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_expiring")]
            public bool IsExpiring { get; set; }

            /// <summary>
            /// The subscription plan
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("pricing")]
            public StarSubscriptionPricing Pricing { get; set; }

            /// <summary>
            /// Type of the subscription
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public StarSubscriptionType Type { get; set; }
        }
    }
}
// REUSE-IgnoreEnd