using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class MessageContent : Object
        {
            /// <summary>
            /// A giveaway with public winners has been completed for the chat
            /// </summary>
            public class MessageGiveawayWinners : MessageContent
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "messageGiveawayWinners";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Identifier of the supergroup or channel chat, which was automatically boosted by the winners of the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("boosted_chat_id")]
                public long BoostedChatId { get; set; }

                /// <summary>
                /// Identifier of the message with the giveaway in the boosted chat
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("giveaway_message_id")]
                public long GiveawayMessageId { get; set; }

                /// <summary>
                /// Number of other chats that participated in the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("additional_chat_count")]
                public int AdditionalChatCount { get; set; }

                /// <summary>
                /// Point in time (Unix timestamp) when the winners were selected. May be bigger than winners selection date specified in parameters of the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("actual_winners_selection_date")]
                public int ActualWinnersSelectionDate { get; set; }

                /// <summary>
                /// True, if only new members of the chats were eligible for the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("only_new_members")]
                public bool OnlyNewMembers { get; set; }

                /// <summary>
                /// True, if the giveaway was canceled and was fully refunded
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("was_refunded")]
                public bool WasRefunded { get; set; }

                /// <summary>
                /// Prize of the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("prize")]
                public GiveawayPrize Prize { get; set; }

                /// <summary>
                /// Additional description of the giveaway prize
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("prize_description")]
                public string PrizeDescription { get; set; }

                /// <summary>
                /// Total number of winners in the giveaway
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("winner_count")]
                public int WinnerCount { get; set; }

                /// <summary>
                /// Up to 100 user identifiers of the winners of the giveaway
                /// </summary>
                [JsonProperty("winner_user_ids", ItemConverterType = typeof(Converter))]
                public long[] WinnerUserIds { get; set; }

                /// <summary>
                /// Number of undistributed prizes; for Telegram Premium giveaways only
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("unclaimed_prize_count")]
                public int UnclaimedPrizeCount { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd